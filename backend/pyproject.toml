[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ottawa-genai-research-assistant"
version = "0.1.0"
description = "AI-powered research assistant for Ottawa's economic development team"
authors = [
    {name = "Development Team", email = "dev@ottawa.ca"},
]
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "python-multipart>=0.0.6",
    "python-dotenv>=1.0.0",
    "openai>=1.3.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "pdfplumber>=0.7.6",
    "PyPDF2>=3.0.1",
]
requires-python = ">=3.11"

[project.optional-dependencies]
dev = [
    "ruff>=0.1.6",
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "httpx>=0.25.2",
    "mypy>=1.7.0",
]

# Ruff configuration - unified linting and formatting
[tool.ruff]
line-length = 88
target-version = "py311"
src = ["app", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "S",   # bandit security
    "T20", # flake8-print
    "SIM", # flake8-simplify
    "RUF", # ruff-specific rules
    "DTZ", # flake8-datetimez (timezone-aware datetime)
]
ignore = [
    "E501",   # line too long, handled by formatter
    "S101",   # use of assert
    "T201",   # print statements (allow for debugging)
    "B008",   # function call in argument defaults
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true

[tool.ruff.lint.isort]
known-first-party = ["app"]
force-single-line = false
lines-after-imports = 2

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101", "S106"]  # Allow assert and hardcoded passwords in tests
"app/main.py" = ["T201"]            # Allow print in main entry point

# MyPy configuration for type checking
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pdfplumber.*",
    "PyPDF2.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
] 